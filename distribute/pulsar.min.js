var Hooks={events:{},add:function(t,e){Hooks.events[t]||(Hooks.events[t]=[]),Hooks.events[t].push(e)},call:function(t,...e){Hooks.events[t]&&Hooks.events[t].forEach(n=>{try{n(...e)}catch(a){console.warn(`Hook event ${t} failed - ${a}`)}})}};function render_route(t,e,n){if(e!=n){var a=document.querySelector(`[route='${e}']`);a&&setVisibility(a,!1);var o=document.querySelector(`[route='${n}']`);if(o){setVisibility(o,!0);let s=new CustomEvent("pageTransition",{detail:{oldRoute:e,newRoute:n}});window.dispatchEvent(s);return}try{let i=async()=>{let a=await fetch(t);if(!a.ok)throw Error(`HTTP error! status: ${a.status}`);let o=await a.text();setInnerHtml(document.getElementById("page-container"),o,n);let s=new CustomEvent("pageTransition",{detail:{oldRoute:e,newRoute:n}});window.dispatchEvent(s)};i()}catch(r){console.log("There was a problem with the fetch operation: "+r.message)}}}function StateManager(t,e){this.state=t,this.event=e;let n=t=>{this.state=t};this.setState=new Proxy(n,{apply:function(t,e,n){console.log("Previous state:",JSON.stringify(e.state)),t.apply(e,n),console.log("New state:",JSON.stringify(e.state));let a=window.dispatchEvent(new Event(e.event));console.log(`Event "${e.event}" fired: ${a}`)}})}function createState(t,e){return console.log("Initializing state"),new StateManager(t,e)}